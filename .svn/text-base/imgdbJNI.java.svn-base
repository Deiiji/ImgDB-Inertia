/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.imgseek.imgdb.core;

class imgdbJNI {
  public final static native long new_IntVector__SWIG_0();
  public final static native long new_IntVector__SWIG_1(long jarg1);
  public final static native long IntVector_size(long jarg1, IntVector jarg1_);
  public final static native long IntVector_capacity(long jarg1, IntVector jarg1_);
  public final static native void IntVector_reserve(long jarg1, IntVector jarg1_, long jarg2);
  public final static native boolean IntVector_isEmpty(long jarg1, IntVector jarg1_);
  public final static native void IntVector_clear(long jarg1, IntVector jarg1_);
  public final static native void IntVector_add(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_get(long jarg1, IntVector jarg1_, int jarg2);
  public final static native void IntVector_set(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVector(long jarg1);
  public final static native long new_LongIntVector__SWIG_0();
  public final static native long new_LongIntVector__SWIG_1(long jarg1);
  public final static native long LongIntVector_size(long jarg1, LongIntVector jarg1_);
  public final static native long LongIntVector_capacity(long jarg1, LongIntVector jarg1_);
  public final static native void LongIntVector_reserve(long jarg1, LongIntVector jarg1_, long jarg2);
  public final static native boolean LongIntVector_isEmpty(long jarg1, LongIntVector jarg1_);
  public final static native void LongIntVector_clear(long jarg1, LongIntVector jarg1_);
  public final static native void LongIntVector_add(long jarg1, LongIntVector jarg1_, int jarg2);
  public final static native int LongIntVector_get(long jarg1, LongIntVector jarg1_, int jarg2);
  public final static native void LongIntVector_set(long jarg1, LongIntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_LongIntVector(long jarg1);
  public final static native long new_DoubleVector__SWIG_0();
  public final static native long new_DoubleVector__SWIG_1(long jarg1);
  public final static native long DoubleVector_size(long jarg1, DoubleVector jarg1_);
  public final static native long DoubleVector_capacity(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_reserve(long jarg1, DoubleVector jarg1_, long jarg2);
  public final static native boolean DoubleVector_isEmpty(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_clear(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_add(long jarg1, DoubleVector jarg1_, double jarg2);
  public final static native double DoubleVector_get(long jarg1, DoubleVector jarg1_, int jarg2);
  public final static native void DoubleVector_set(long jarg1, DoubleVector jarg1_, int jarg2, double jarg3);
  public final static native void delete_DoubleVector(long jarg1);
  public final static native long queryImgID(int jarg1, int jarg2, int jarg3);
  public final static native long queryImgIDFast(int jarg1, int jarg2, int jarg3);
  public final static native long queryImgData(int jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native int addImage(int jarg1, int jarg2, String jarg3);
  public final static native int savedb(int jarg1, String jarg2);
  public final static native int loaddb(int jarg1, String jarg2);
  public final static native int savealldbs(String jarg1);
  public final static native int loadalldbs(String jarg1);
  public final static native int removeID(int jarg1, int jarg2);
  public final static native int resetdb(int jarg1);
  public final static native void initDbase(int jarg1);
  public final static native void closeDbase();
  public final static native int getImgCount(int jarg1);
  public final static native boolean isImageOnDB(int jarg1, int jarg2);
  public final static native int getImageHeight(int jarg1, int jarg2);
  public final static native int getImageWidth(int jarg1, int jarg2);
  public final static native double calcAvglDiff(int jarg1, int jarg2, int jarg3);
  public final static native double calcDiff(int jarg1, int jarg2, int jarg3);
  public final static native long getImageAvgl(int jarg1, int jarg2);
  public final static native int addImageBlob(int jarg1, int jarg2, long jarg3, int jarg4);
  public final static native long getDBList();
  public final static native long getImgIdList(int jarg1);
  public final static native boolean isValidDB(int jarg1);
  public final static native int destroydb(int jarg1);
  public final static native boolean deactivateTrial(int jarg1);
  public final static native boolean removedb(int jarg1);
  public final static native boolean addKeywordImg(int jarg1, int jarg2, int jarg3);
  public final static native boolean addKeywordsImg(int jarg1, int jarg2, long jarg3, IntVector jarg3_);
  public final static native boolean removeKeywordImg(int jarg1, int jarg2, int jarg3);
  public final static native boolean removeAllKeywordImg(int jarg1, int jarg2);
  public final static native long getKeywordsImg(int jarg1, int jarg2);
  public final static native long queryImgIDKeywords(int jarg1, int jarg2, int jarg3, int jarg4, long jarg5, IntVector jarg5_);
  public final static native long queryImgIDFastKeywords(int jarg1, int jarg2, int jarg3, int jarg4, long jarg5, IntVector jarg5_);
  public final static native long getAllImgsByKeywords(int jarg1, int jarg2, int jarg3, long jarg4, IntVector jarg4_);
  public final static native double getKeywordsVisualDistance(int jarg1, int jarg2, long jarg3, IntVector jarg3_);
  public final static native long getKeywordsPopular(int jarg1, int jarg2);
  public final static native void clustersStruct_id_set(long jarg1, clustersStruct jarg1_, long jarg2);
  public final static native long clustersStruct_id_get(long jarg1, clustersStruct jarg1_);
  public final static native void clustersStruct_imgIds_set(long jarg1, clustersStruct jarg1_, long jarg2, LongIntVector jarg2_);
  public final static native long clustersStruct_imgIds_get(long jarg1, clustersStruct jarg1_);
  public final static native void clustersStruct_diameter_set(long jarg1, clustersStruct jarg1_, double jarg2);
  public final static native double clustersStruct_diameter_get(long jarg1, clustersStruct jarg1_);
  public final static native long new_clustersStruct();
  public final static native void delete_clustersStruct(long jarg1);
  public final static native long new_ClusterVector__SWIG_0();
  public final static native long new_ClusterVector__SWIG_1(long jarg1);
  public final static native long ClusterVector_size(long jarg1, ClusterVector jarg1_);
  public final static native long ClusterVector_capacity(long jarg1, ClusterVector jarg1_);
  public final static native void ClusterVector_reserve(long jarg1, ClusterVector jarg1_, long jarg2);
  public final static native boolean ClusterVector_isEmpty(long jarg1, ClusterVector jarg1_);
  public final static native void ClusterVector_clear(long jarg1, ClusterVector jarg1_);
  public final static native void ClusterVector_add(long jarg1, ClusterVector jarg1_, long jarg2, clustersStruct jarg2_);
  public final static native long ClusterVector_get(long jarg1, ClusterVector jarg1_, int jarg2);
  public final static native void ClusterVector_set(long jarg1, ClusterVector jarg1_, int jarg2, long jarg3, clustersStruct jarg3_);
  public final static native void delete_ClusterVector(long jarg1);
  public final static native long getClusterDb(int jarg1, int jarg2);
  public final static native long getClusterKeywords(int jarg1, int jarg2, long jarg3, IntVector jarg3_);
  public final static native long getIdsBloomFilter(int jarg1);
  public final static native long new_bloom_filter__SWIG_0(long jarg1, double jarg2, long jarg3);
  public final static native long new_bloom_filter__SWIG_1(long jarg1, bloom_filter jarg1_);
  public final static native void delete_bloom_filter(long jarg1);
  public final static native void bloom_filter_insert(long jarg1, bloom_filter jarg1_, int jarg2);
  public final static native boolean bloom_filter_contains(long jarg1, bloom_filter jarg1_, int jarg2);
  public final static native long bloom_filter_size(long jarg1, bloom_filter jarg1_);
}
